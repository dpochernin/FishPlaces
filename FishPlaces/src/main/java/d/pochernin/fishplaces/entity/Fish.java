package d.pochernin.fishplaces.entity;
// Generated May 28, 2016 8:22:08 PM by Hibernate Tools 4.3.1

import java.util.HashSet;
import java.util.Objects;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Fish generated by hbm2java
 */
@Entity
@Table(name = "fishes", catalog = "fish_places"
)
public class Fish implements java.io.Serializable {

    private int fishId;
    private String fishName;
    private Set fishInPlaceses = new HashSet(0);

    public Fish() {
    }

    public Fish(int fishId) {
        this.fishId = fishId;
    }

    public Fish(int fishId, String fishName, Set fishInPlaceses) {
        this.fishId = fishId;
        this.fishName = fishName;
        this.fishInPlaceses = fishInPlaceses;
    }

    @Id

    @Column(name = "fish_id", unique = true, nullable = false)
    public int getFishId() {
        return this.fishId;
    }

    public void setFishId(int fishId) {
        this.fishId = fishId;
    }

    @Column(name = "fish_name")
    public String getFishName() {
        return this.fishName;
    }

    public void setFishName(String fishName) {
        this.fishName = fishName;
    }

    @OneToMany(fetch = FetchType.LAZY, mappedBy = "fishes")
    public Set<FishInPlace> getFishInPlaceses() {
        return this.fishInPlaceses;
    }

    public void setFishInPlaceses(Set<FishInPlace> fishInPlaceses) {
        this.fishInPlaceses = fishInPlaceses;
    }

    @Override
    public int hashCode() {
        int hash = 7;
        hash = 13 * hash + this.fishId;
        hash = 13 * hash + Objects.hashCode(this.fishName);
        return hash;
    }

    @Override
    public boolean equals(Object obj) {
        if (this == obj) {
            return true;
        }
        if (obj == null) {
            return false;
        }
        if (getClass() != obj.getClass()) {
            return false;
        }
        final Fish other = (Fish) obj;
        if (this.fishId != other.fishId) {
            return false;
        }
        if (!Objects.equals(this.fishName, other.fishName)) {
            return false;
        }
        return true;
    }

    @Override
    public String toString() {
        return "Fish{" + "fishId=" + fishId + ", fishName=" + fishName + '}';
    }

}
